CVE-2018-15919
==============

.. raw:: html

    <div class="card card-margin">
        <div class="card-header no-border">
            <h5 class="card-title cve-title">CVE-2018-15919</h5>
        </div>
        <div class="card-body pt-0">
            <div class="widget-49">
                <div class="widget-49-title-wrapper">
                    <div class="widget-49-date-primary">
                        <span class="widget-49-date-day">5.3</span>
                        <span class="widget-49-date-month">CVSS</span>
                    </div>
                    <div class="widget-49-meeting-info">
                        <span class="widget-49-pro-title">
                        <b>Vector:</b>
                            CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N
                        </span>
                        <span class="widget-49-meeting-time">
                            <a href="https://nvd.nist.gov/vuln/detail/CVE-2018-15919">https://nvd.nist.gov/vuln/detail/CVE-2018-15919</a>
                        </span>
                    </div>
                </div>
                <p class="widget-49-meeting-integration">
                    <i class="far fa-times-circle"></i> not integrated in SSH-MITM server
                </p>
                <p class="widget-49-meeting-text">
                    Remotely observable behaviour in auth-gss2.c in OpenSSH through 7.8 could be used by remote attackers to detect existence of users on a target system when GSS2 is in use. NOTE: the discoverer states 'We understand that the OpenSSH developers do not want to treat such a username enumeration (or "oracle") as a vulnerability.'
                </p>
                <span class="widget-49-pro-title"><b>Affected Software:</b></span>
                <ul class="widget-49-meeting-points">
                    <li class="widget-49-meeting-item"><b>OpenSSH</b> 5.9 - 7.8</li>
                </ul>
            </div>
        </div>
    </div>


**Source:** https://github.com/cpandya2909/CVE-2020-15778

* **Discoverd by:** Chinmay Pandya
* **Email address:** cpandya2909@gmail.com
* **Linkedin:** https://www.linkedin.com/in/chinmay-pandya

Discloser timelie
-----------------

* Issue discovered - 9 Jun 2020
* CVE obtained - 16 Jul 2020
* Vendor notified - 9 Jun 2020
* Vendor acknowledgement received - 9 Jun 2020
* Public disclosure 18 Jul 2020


About SCP
---------

scp is a program for copying files between computers.
It uses the SSH protocol. It is included by default in most Linux and
Unix distributions.

Issue
-----

While coping files to remote server, file path is appended at end of local scp command. For example, if you execute following command

.. code-block:: bash

    scp SourceFile user@host:directory/TargetFile

it will execute a local command

.. code-block:: bash

    scp -t directory/TargetFile

At time of creating local scp command, it does not sanitise file name. An attacker can pass a backtick enabled payload as file name and when local scp command is executed, local shell will also execute backtick enabled payload.

Example
-------

Execute following command with scp

.. code-block:: bash

    scp  /sourcefile remoteserver:'`touch /tmp/exploit.sh`/targetfile'

After executing this command, go to remote server and you will see in /tmp/ directory that file exploit.sh is present. Putting single quotes in file name is important to prevent payload execution on local shell or using escape character like single quotes in file name can prevent payload execution on local shell


Openssh reply
-------------

.. note::

    The scp command is a historical protocol (called rcp) which relies upon that style of argument passing and encounters expansion problems. It has proven very difficult to add "security" to the scp model. All attempts to "detect" and "prevent" anomalous argument transfers stand a great chance of breaking existing workflows. Yes, we recognize it the situation sucks. But we don't want to break the easy patterns people use scp for, until there is a commonplace replacement. People should use rsync or something else instead if they are concerned.

Reference
---------

Code for SCP - https://github.com/openssh/openssh-portable/blob/master/scp.c
