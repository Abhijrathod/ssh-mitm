# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))

import datetime

# -- Project information -----------------------------------------------------

project = 'SSH-MITM'
author = 'Manfred Kaiser'
copyright = '{}, {}'.format(datetime.datetime.now().year, author)  # pylint: disable=redefined-builtin

extensions = [
    'sphinx.ext.autosectionlabel',
]

master_doc = 'index'
html_add_permalinks = ''

# -- General configuration ---------------------------------------------------

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []


# -- Options for HTML output -------------------------------------------------

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

header = {
    'title': 'SSH MITM SERVER & content inspection',
    'summary': 'man in the middle (mitm) server for security audits supporting public key authentication, session hijacking and file manipulation'
}

footer = {
    'title': 'SSH-MITM proxy server is open source',
    'summary': 'and developed by the community. Be a part of this community and...',
    'linktext': 'contribute to SSH-MITM'
}

page_descriptions = {
    'install.html': 'SSH-MITM server is easy to install with Python and PIP',
    'quickstart.html': 'Short guide to setup an intercepting ssh-mitm server with a single command',
    'advanced-usage.html': 'Guide how to setup a man in the middle server for advanced security audits in large networks and special use cases',
}

html_context = {
    'author': author,
    'page_descriptions': page_descriptions,
    'intro_text': 'SSH MITM SERVER & content inspection',
    'footer': footer,
    'social': {
        'githubfork_ribbon': True,
        'githubrepo': 'https://github.com/ssh-mitm/ssh-mitm',
        'pypiurl': 'https://pypi.org/project/ssh-mitm/',
        'linkedinurl': 'https://www.linkedin.com/in/manfred-kaiser'
    }
}
